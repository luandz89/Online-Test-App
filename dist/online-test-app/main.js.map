{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/quiz/quiz.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/index.ts","webpack:///./src/app/models/option.ts","webpack:///./src/app/models/question.ts","webpack:///./src/app/models/quiz-config.ts","webpack:///./src/app/models/quiz.ts","webpack:///./src/app/quiz/quiz.component.css","webpack:///./src/app/quiz/quiz.component.ts","webpack:///./src/app/services/quiz.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\r\\n  <app-quiz></app-quiz>\\r\\n</div>\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <h3>Quiz Application</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-6 text-right\\\">\\r\\n    Select Quiz:\\r\\n    <select [(ngModel)]=\\\"quizName\\\" (change)=\\\"loadQuiz(quizName)\\\">\\r\\n      <option *ngFor=\\\"let quiz of quizes\\\" [value]=\\\"quiz.id\\\">{{quiz.name}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n</div>\\r\\n<div id=\\\"quiz\\\">\\r\\n  <h2 class=\\\"text-center font-weight-normal\\\">{{quiz.name}}</h2>\\r\\n  <hr />\\r\\n\\r\\n  <div *ngIf=\\\"mode=='quiz' && quiz\\\">\\r\\n    <div *ngFor=\\\"let question of filteredQuestions;\\\">\\r\\n      <div class=\\\"badge badge-info\\\">Question {{pager.index + 1}} of {{pager.count}}.</div>\\r\\n      <div *ngIf=\\\"config.duration\\\" class=\\\"badge badge-info float-right\\\">Time: {{ellapsedTime}} / {{duration}}</div>\\r\\n      <h3 class=\\\"font-weight-normal\\\">{{pager.index + 1}}.\\r\\n        <span [innerHTML]=\\\"question.name\\\"></span>\\r\\n      </h3>\\r\\n      <div class=\\\"row text-left options\\\">\\r\\n        <div class=\\\"col-6\\\" *ngFor=\\\"let option of question.options\\\">\\r\\n          <div class=\\\"option\\\">\\r\\n            <label class=\\\"font-weight-normal\\\" [attr.for]=\\\"option.id\\\">\\r\\n              <input id=\\\"{{option.id}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"option.selected\\\" (change)=\\\"onSelect(question, option);\\\" /> {{option.name}}\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(0);\\\">First</button>\\r\\n      <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.index - 1);\\\">Prev</button>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"goTo(pager.index + 1);\\\">Next</button>\\r\\n      <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.count - 1);\\\">Last</button>\\r\\n      <!--<pagination *ngIf=\\\"config.showPager\\\" direction-links=\\\"false\\\" total-items=\\\"totalItems\\\" items-per-page=\\\"itemsPerPage\\\" ng-model=\\\"currentPage\\\" ng-change=\\\"pageChanged()\\\"></pagination>-->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row text-center\\\" *ngIf=\\\"mode=='review'\\\">\\r\\n    <div class=\\\"col-4 cursor-pointer\\\" *ngFor=\\\"let question of quiz.questions; let index = index;\\\">\\r\\n      <div (click)=\\\"goTo(index)\\\" class=\\\"p-3 mb-2 {{ isAnswered(question) == 'Answered'? 'bg-info': 'bg-warning' }}\\\">{{index + 1}}. {{ isAnswered(question) }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"result\\\" *ngIf=\\\"mode=='result'\\\">\\r\\n    <h2>Quiz Result</h2>\\r\\n    <div *ngFor=\\\"let question of quiz.questions; let index = index\\\">\\r\\n      <div class=\\\"result-question\\\">\\r\\n        <h5>{{index + 1}}. {{question.name}}</h5>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-6\\\" *ngFor=\\\"let Option of question.options\\\">\\r\\n            <input id=\\\"{{Option.id}}\\\" type=\\\"checkbox\\\" disabled=\\\"disabled\\\" [(ngModel)]=\\\"Option.selected\\\" /> {{Option.name}}\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"p-1 m-2 alert {{ isCorrect(question) == 'correct'? 'alert-success': 'alert-danger'}}\\\">Your answer is {{isCorrect(question)}}.</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <h4 class=\\\"alert alert-info text-center\\\">You may close this window now.</h4>\\r\\n  </div>\\r\\n  <hr />\\r\\n  <div *ngIf=\\\"mode!='result'\\\">\\r\\n    <button class=\\\"btn btn-warning\\\" (click)=\\\"mode = 'quiz'\\\">Quiz</button>\\r\\n    <button class=\\\"btn btn-info\\\" (click)=\\\"mode = 'review'\\\">Review</button>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit();\\\">Submit Quiz</button>\\r\\n  </div>\\r\\n</div>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\nimport { QuizComponent } from './quiz/quiz.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { QuizComponent } from './quiz/quiz.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    QuizComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export * from './option';\r\nexport * from './question';\r\nexport * from './quiz';\r\nexport * from './quiz-config';\r\n","export class Option {\r\n    id: number;\r\n    questionId: number;\r\n    name: string;\r\n    isAnswer: boolean;\r\n    selected: boolean;\r\n\r\n    constructor(data: any) {\r\n        data = data || {};\r\n        this.id = data.id;\r\n        this.questionId = data.questionId;\r\n        this.name = data.name;\r\n        this.isAnswer = data.isAnswer;\r\n    }\r\n}\r\n","import { Option } from './option';\r\n\r\nexport class Question {\r\n    id: number;\r\n    name: string;\r\n    questionTypeId: number;\r\n    options: Option[];\r\n    answered: boolean;\r\n\r\n    constructor(data: any) {\r\n        data = data || {};\r\n        this.id = data.id;\r\n        this.name = data.name;\r\n        this.questionTypeId = data.questionTypeId;\r\n        this.options = [];\r\n        data.options.forEach(o => {\r\n            this.options.push(new Option(o));\r\n        });\r\n    }\r\n}\r\n","export class QuizConfig {\r\n    allowBack: boolean;\r\n    allowReview: boolean;\r\n    autoMove: boolean;  // if boolean; it will move to next question automatically when answered.\r\n    duration: number;  // indicates the time in which quiz needs to be completed. 0 means unlimited.\r\n    pageSize: number;\r\n    requiredAll: boolean;  // indicates if you must answer all the questions before submitting.\r\n    richText: boolean;\r\n    shuffleQuestions: boolean;\r\n    shuffleOptions: boolean;\r\n    showClock: boolean;\r\n    showPager: boolean;\r\n    theme: string;\r\n\r\n    constructor(data: any) {\r\n        data = data || {};\r\n        this.allowBack = data.allowBack;\r\n        this.allowReview = data.allowReview;\r\n        this.autoMove = data.autoMove;\r\n        this.duration = data.duration;\r\n        this.pageSize = data.pageSize;\r\n        this.requiredAll = data.requiredAll;\r\n        this.richText = data.richText;\r\n        this.shuffleQuestions = data.shuffleQuestions;\r\n        this.shuffleOptions = data.shuffleOptions;\r\n        this.showClock = data.showClock;\r\n        this.showPager = data.showPager;\r\n    }\r\n}\r\n","import { QuizConfig } from './quiz-config';\r\nimport { Question } from './question';\r\n\r\nexport class Quiz {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    config: QuizConfig;\r\n    questions: Question[];\r\n\r\n    constructor(data: any) {\r\n        if (data) {\r\n            this.id = data.id;\r\n            this.name = data.name;\r\n            this.description = data.description;\r\n            this.config = new QuizConfig(data.config);\r\n            this.questions = [];\r\n            data.questions.forEach(q => {\r\n                this.questions.push(new Question(q));\r\n            });\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1aXovcXVpei5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { QuizService } from '../services/quiz.service';\r\nimport { HelperService } from '../services/helper.service';\r\nimport { Option, Question, Quiz, QuizConfig } from '../models/index';\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  templateUrl: './quiz.component.html',\r\n  styleUrls: ['./quiz.component.css'],\r\n  providers: [QuizService]\r\n})\r\nexport class QuizComponent implements OnInit {\r\n  quizes: any[];\r\n  quiz: Quiz = new Quiz(null);\r\n  mode = 'quiz';\r\n  quizName: string;\r\n  config: QuizConfig = {\r\n    'allowBack': true,\r\n    'allowReview': true,\r\n    'autoMove': false,  // if true, it will move to next question automatically when answered.\r\n    'duration': 300,  // indicates the time (in secs) in which quiz needs to be completed. 0 means unlimited.\r\n    'pageSize': 1,\r\n    'requiredAll': false,  // indicates if you must answer all the questions before submitting.\r\n    'richText': false,\r\n    'shuffleQuestions': false,\r\n    'shuffleOptions': false,\r\n    'showClock': false,\r\n    'showPager': true,\r\n    'theme': 'none'\r\n  };\r\n\r\n  pager = {\r\n    index: 0,\r\n    size: 1,\r\n    count: 1\r\n  };\r\n  timer: any = null;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  ellapsedTime = '00:00';\r\n  duration = '';\r\n\r\n  constructor(private quizService: QuizService) { }\r\n\r\n  ngOnInit() {\r\n    this.quizes = this.quizService.getAll();\r\n    this.quizName = this.quizes[0].id;\r\n    this.loadQuiz(this.quizName);\r\n  }\r\n\r\n  loadQuiz(quizName: string) {\r\n    this.quizService.get(quizName).subscribe(res => {\r\n      this.quiz = new Quiz(res);\r\n      this.pager.count = this.quiz.questions.length;\r\n      this.startTime = new Date();\r\n      this.ellapsedTime = '00:00';\r\n      this.timer = setInterval(() => { this.tick(); }, 1000);\r\n      this.duration = this.parseTime(this.config.duration);\r\n    });\r\n    this.mode = 'quiz';\r\n  }\r\n\r\n  tick() {\r\n    const now = new Date();\r\n    const diff = (now.getTime() - this.startTime.getTime()) / 1000;\r\n    if (diff >= this.config.duration) {\r\n      this.onSubmit();\r\n    }\r\n    this.ellapsedTime = this.parseTime(diff);\r\n  }\r\n\r\n  parseTime(totalSeconds: number) {\r\n    let mins: string | number = Math.floor(totalSeconds / 60);\r\n    let secs: string | number = Math.round(totalSeconds % 60);\r\n    mins = (mins < 10 ? '0' : '') + mins;\r\n    secs = (secs < 10 ? '0' : '') + secs;\r\n    return `${mins}:${secs}`;\r\n  }\r\n\r\n  get filteredQuestions() {\r\n    return (this.quiz.questions) ?\r\n      this.quiz.questions.slice(this.pager.index, this.pager.index + this.pager.size) : [];\r\n  }\r\n\r\n  onSelect(question: Question, option: Option) {\r\n    if (question.questionTypeId === 1) {\r\n      question.options.forEach((x) => { if (x.id !== option.id) x.selected = false; });\r\n    }\r\n\r\n    if (this.config.autoMove) {\r\n      this.goTo(this.pager.index + 1);\r\n    }\r\n  }\r\n\r\n  goTo(index: number) {\r\n    if (index >= 0 && index < this.pager.count) {\r\n      this.pager.index = index;\r\n      this.mode = 'quiz';\r\n    }\r\n  }\r\n\r\n  isAnswered(question: Question) {\r\n    return question.options.find(x => x.selected) ? 'Answered' : 'Not Answered';\r\n  };\r\n\r\n  isCorrect(question: Question) {\r\n    return question.options.every(x => x.selected === x.isAnswer) ? 'correct' : 'wrong';\r\n  };\r\n\r\n  onSubmit() {\r\n    let answers = [];\r\n    this.quiz.questions.forEach(x => answers.push({ 'quizId': this.quiz.id, 'questionId': x.id, 'answered': x.answered }));\r\n\r\n    // Post your data to the server here. answers contains the questionId and the users' answer.\r\n    console.log(this.quiz.questions);\r\n    this.mode = 'result';\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class QuizService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAll() {\r\n    return [\r\n      { id: 'data/javascript.json', name: 'JavaScript' },\r\n      { id: 'data/aspnet.json', name: 'Asp.Net' },\r\n      { id: 'data/csharp.json', name: 'C Sharp' },\r\n      { id: 'data/designPatterns.json', name: 'Design Patterns' }\r\n    ];\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}